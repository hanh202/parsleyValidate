'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _child_process = require('child_process');

var _child_process2 = _interopRequireDefault(_child_process);

var _fsExtra = require('fs-extra');

var _fsExtra2 = _interopRequireDefault(_fsExtra);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _Config = require('../utils/Config');

var _log = require('../helpers/log');

var _log2 = _interopRequireDefault(_log);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var resolvedPackages = [];

/**
 * Resolve monorepo packages using the Git "diff" command.
 *
 * @returns {Promise}
 */
function resolve() {
  return new _promise2.default(function (promiseResolve) {
    _child_process2.default.exec('git diff HEAD^ HEAD', function (error, stdout) {
      _Config.packages.forEach(function (item) {
        if (stdout.includes('diff --git a/packages/' + item)) resolvedPackages.push(item);
      });

      if (resolvedPackages.length > 0) {
        _log2.default.info('The following packages have been modified since the last commit: ' + resolvedPackages.join(', ') + '.');
      } else {
        _log2.default.info('There is no modified package since the last commit.');
      }

      _fsExtra2.default.writeFileSync(_path2.default.join(process.cwd(), './packages-manifest.json'), (0, _stringify2.default)(resolvedPackages));
      promiseResolve();
    });
  });
}

exports.default = resolve;